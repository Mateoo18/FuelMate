# Generated by Django 3.2.25 on 2024-12-18 22:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'complain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fuel',
            fields=[
                ('fuel_id', models.BigAutoField(db_column='Fuel_Id', primary_key=True, serialize=False)),
                ('Name', models.CharField(db_column='Name', max_length=100)),
            ],
            options={
                'db_table': 'Fuel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GasStations',
            fields=[
                ('Station_Id', models.BigAutoField(db_column='id_stations', primary_key=True, serialize=False)),
                ('Address', models.CharField(db_column='address', max_length=100)),
                ('City', models.CharField(db_column='city', max_length=100)),
                ('Zip', models.CharField(db_column='postal_code', max_length=100)),
                ('Name', models.CharField(db_column='name', max_length=100)),
                ('Latitude', models.FloatField(db_column='latitude')),
                ('Longitude', models.FloatField(db_column='longitude')),
                ('Phone', models.CharField(db_column='phone', max_length=100)),
            ],
            options={
                'db_table': 'Gas_Stations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('Notification_Id', models.BigAutoField(db_column='Notification_Id', primary_key=True, serialize=False)),
                ('Price_Threshold', models.FloatField(db_column='Price_Threshold')),
                ('Status', models.CharField(db_column='Status', max_length=100)),
                ('Setting_Date', models.DateTimeField(db_column='Setting_Date')),
            ],
            options={
                'db_table': 'Notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('zip_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=100)),
                ('place', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
            options={
                'db_table': 'postal_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('Price_Id', models.BigAutoField(db_column='Price_History_Id', primary_key=True, serialize=False)),
                ('Price', models.FloatField(db_column='Price')),
                ('Date', models.DateTimeField(db_column='Change_Date')),
            ],
            options={
                'db_table': 'Price_History',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('Promotion_Id', models.BigAutoField(db_column='Promotions_Id', primary_key=True, serialize=False)),
                ('Start_Date', models.DateTimeField(db_column='Start_Date')),
                ('End_Date', models.DateTimeField(db_column='End_Date')),
                ('Comment', models.CharField(db_column='Promotion_Description', max_length=100)),
            ],
            options={
                'db_table': 'Promotions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('Report_Id', models.BigAutoField(db_column='Reports_Id', primary_key=True, serialize=False)),
                ('Reported_price', models.FloatField(db_column='Reported_Price')),
                ('Reported_date', models.DateTimeField(db_column='Report_Date')),
                ('Comment', models.CharField(db_column='Comment', max_length=100)),
            ],
            options={
                'db_table': 'Reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('Role_Id', models.BigAutoField(db_column='Role_Id', primary_key=True, serialize=False)),
                ('Role_Name', models.CharField(db_column='Role_Name', max_length=100)),
            ],
            options={
                'db_table': 'Roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationFuel',
            fields=[
                ('Station_Fuel_Id', models.BigAutoField(db_column='Station_Fuel_Id', primary_key=True, serialize=False)),
                ('Price', models.FloatField(db_column='Price')),
                ('Date', models.DateTimeField(db_column='Update_Date')),
            ],
            options={
                'db_table': 'Station_Fuel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationRev',
            fields=[
                ('Station_Reviews_Id', models.BigAutoField(db_column='Station_Reviews_Id', primary_key=True, serialize=False)),
                ('Rating', models.FloatField(db_column='Rating')),
                ('Comment', models.CharField(db_column='Comment', max_length=100)),
                ('Date', models.DateTimeField(db_column='Review_Date')),
            ],
            options={
                'db_table': 'Station_Reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('UserId', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('Last_login', models.DateTimeField(blank=True, db_column='last_login', null=True)),
                ('Is_super_user', models.BooleanField(db_column='is_superuser')),
                ('Username', models.CharField(db_column='username', max_length=100)),
                ('First_name', models.CharField(db_column='first_name', max_length=100)),
                ('Last_name', models.CharField(db_column='last_name', max_length=100)),
                ('Email', models.EmailField(db_column='email', max_length=100, unique=True)),
                ('Is_staff', models.BooleanField(db_column='is_staff')),
                ('Is_active', models.BooleanField(db_column='is_active')),
                ('Date_joined', models.DateTimeField(db_column='date_joined')),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationRating',
            fields=[
                ('id_stations', models.OneToOneField(db_column='id_stations', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='rating', serialize=False, to='stations.gasstations')),
                ('rating', models.FloatField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'station_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(default='Gaz', max_length=50)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=6)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteStation',
            fields=[
                ('Favorite_Id', models.BigAutoField(db_column='Favorite_Stations_Id', primary_key=True, serialize=False)),
                ('Station_Id', models.ForeignKey(db_column='Station_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='stations.gasstations')),
                ('User_Id', models.ForeignKey(db_column='User_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='stations.users')),
            ],
            options={
                'db_table': 'Favorite_Stations',
                'managed': True,
            },
        ),
    ]
